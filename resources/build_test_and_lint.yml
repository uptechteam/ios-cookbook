name: Build/Test and lint

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  build_test_and_lint:
    runs-on: macos-15
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.11.0
      with:
        access_token: ${{ github.token }}

    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable

    - name: Setup ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '2.7.6'

    - name: Install Bundler
      run: gem install bundler -v 2.4.7

    - name: Install gems
      run: bundle install

    # SPM cache in this example is stored only per pull requests (if commits are added after pull request was opened), can be added to develop caching if needed
    - name: Resolve SPM cache
      uses: actions/cache@v4
      with:
        path: ~/Library/Developer/Xcode/DerivedData
        key: ${{ runner.os }}-xcode-dd-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-xcode-dd-

    # use this if your project doest not have tests and remove next step
    - name: Build
      run: bundle exec fastlane build build_configuration:development
      env:
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}

    # use this step if your project has tests and remove previous step
    - name: Test
      run: bundle exec fastlane test build_configuration:development
      env:
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}    

    # remove next two steps if you dont use lint
    - name: Setup Mint Swift Package Manager
      uses: irgaly/setup-mint@v1
      with:
        cache-prefix: mint-${{ hashFiles('**/Mintfile') }}

    - name: Lint
      run: bundle exec fastlane lint
